{"version":3,"sources":["components/TodoInput.js","components/TodoItem.js","components/TodoList.js","fetchData.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","this","props","item","handleChange","handleSubmit","editItem","className","onSubmit","type","placeholder","value","onChange","disabled","Component","TodoItem","title","done","handleDelete","handleEdit","handleDone","onClick","TodoList","items","clearList","map","_id","baseUrl","getItems","a","axios","get","Error","addItem","newItem","post","saveItem","updateItem","itemUpdate","put","deleteItem","id","delete","deletedItem","deleteAll","App","state","fetch","then","status","data","setState","catch","err","console","log","e","target","selectedItem","find","update","preventDefault","add","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.852eb8c1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class TodoInput extends Component {\n  render() {\n    const { item, handleChange, handleSubmit, editItem } = this.props;\n    return (\n      <div className=\"card card-body my-3\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"form-control text-capitalize\"\n              placeholder=\"add todo item\"\n              value={item}\n              onChange={handleChange}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            disabled={item ? false : true}\n            className={\n              editItem\n                ? \"btn btn-block btn-success mt-3\"\n                : \"btn btn-block btn-primary mt-3 text-uppercase\"\n            }\n          >\n            {editItem ? \"edit item\" : \"add item\"}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TodoItem extends Component {\n  render() {\n    const { title, done,  handleDelete, handleEdit, handleDone } = this.props;\n    return (\n      <div \n      className={done? \"done\" : \"\"}>\n        <li \n          className=\"list-group-item text-capitalize d-flex justify-content-between\">\n          <h6 className=\"pointer\" onClick={handleDone}>{title}</h6>\n          <div className=\"todo-icon\">\n            <span className=\"mx-2 text-success\" onClick={handleEdit}>\n              <i className=\"fas fa-pen btn-pointer\" />\n            </span>\n            <span className=\"mx-2 text-danger\" onClick={handleDelete}>\n              <i className=\"fas fa-trash btn-pointer\" />\n            </span>\n          </div>\n        </li>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nexport default class TodoList extends Component {\n  render() {\n    const { items, clearList, handleDelete, handleEdit, handleDone } = this.props;\n    return (\n      <ul className=\"list-group my-5\">\n        <h3 className=\"text-capitalize text-center\">todo list</h3>\n        {items.map(item => {\n          return (\n            <TodoItem\n              key={item._id}\n              title={item.title}\n              done={item.done}\n              handleDelete={() => handleDelete(item._id)}\n              handleEdit={() => handleEdit(item._id)}\n              handleDone={() => handleDone(item._id)}\n            />\n          );\n        })}\n        <button\n          type=\"button\"\n          className=\"btn btn-danger btn-block text-uppercase mt-5\"\n          onClick={clearList}\n        >\n          clear list\n        </button>\n      </ul>\n    );\n  }\n}\n","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:5000'\r\n\r\nexport const getItems = async () => {\r\n    try {\r\n        const items = await axios.get(baseUrl + '/items')\r\n        return items\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n\r\nexport const addItem = async (item) => {\r\n    try {\r\n        const newItem = {\r\n            title: item.title,\r\n            done: item.done\r\n        }\r\n        const saveItem = await axios.post(\r\n        baseUrl + '/add-item',\r\n        newItem\r\n        )\r\n        return saveItem\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n\r\nexport const updateItem = async (item) => {\r\n    try {\r\n        const itemUpdate = {\r\n            title: item.title,\r\n            done: item.done        }\r\n        const updateItem = await axios.put(\r\n            `${baseUrl}/edit-item/${item._id}`,\r\n            itemUpdate\r\n        )\r\n        return updateItem\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n\r\nexport const deleteItem = async (id) => {\r\n    try {\r\n        const deletedItem = await axios.delete(\r\n        `${baseUrl}/delete-item/${id}`\r\n        )\r\n        return deletedItem\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n\r\nexport const deleteAll = async () => {\r\n    try {\r\n        const deletedItem = await axios.delete(\r\n        `${baseUrl}/delete-all/`\r\n        )\r\n        return deletedItem\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\nimport { getItems, addItem, deleteItem, updateItem, deleteAll } from './fetchData'\n\nclass App extends Component {\n  state = {\n    items: [],\n    _id: \"\",\n    title: \"\",\n    done: false,\n    editItem: false\n  };\n\n  componentDidMount () {\n    this.fetch();\n  }\n\n  fetch = () => {\n    getItems().then(({ status, data }) => {\n      if (status !== 200) {\n        throw new Error('Error! items not found')\n      }\n      this.setState({\n        items: data.items,\n        editItem: false,\n        done: false,\n        title:\"\",\n        _id: \"\"\n      });\n    }).catch((err) => console.log(err));\n  }\n\n  handleChange = e => {\n    this.setState({\n      title: e.target.value\n    });\n  };\n\n  handleDone = id => {\n    const selectedItem = this.state.items.find(item => item._id === id);\n    selectedItem.done =  !selectedItem.done\n    this.update(selectedItem);\n  }\n\n  handleEdit = id => {\n    const selectedItem = this.state.items.find(item => item._id === id);\n    this.setState({\n      title: selectedItem.title,\n      done: selectedItem.done,\n      _id: selectedItem._id,\n      editItem: true\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const newItem = {\n      title: this.state.title,      \n      done: this.state.done,\n      _id: this.state._id,\n    }\n    this.state.editItem? this.update(newItem) : this.add(newItem);\n  }\n  \n  add = (item) => {\n    addItem(item).then(({ status }) => {\n      if (status !== 200) {\n        throw new Error('Error! item not saved')\n      }\n      this.fetch();\n    })\n    .catch((err) => console.log(err));\n  };\n\n  update = (item) => {\n    updateItem(item).then(({ status }) => {\n      if (status !== 200) {\n        throw new Error('Error! item not updated')\n      }\n      this.fetch();\n    })\n    .catch((err) => console.log(err));\n  };\n\n  handleDelete = id => {\n    deleteItem(id).then(({ status, data }) => {\n      if (status !== 200) {\n        throw new Error('Error! item not deleted')\n      }\n      this.fetch();\n    })\n    .catch((err) => console.log(err));\n  };\n\n  clearList = () => {\n    deleteAll().then(({ status }) => {\n      if (status !== 200) {\n        throw new Error('Error! all items not deleted')\n      }\n      this.fetch();\n    })\n    .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-10 mx-auto col-md-8 mt-5\">\n            <h3 className=\"text-capitalize text-center\">todo input</h3>\n            <TodoInput\n              item={this.state.title}\n              handleChange={this.handleChange}\n              handleSubmit={this.handleSubmit}\n              editItem={this.state.editItem}\n            />\n            <TodoList\n              items={this.state.items}\n              clearList={this.clearList}\n              handleDelete={this.handleDelete}\n              handleEdit={this.handleEdit}\n              handleDone={this.handleDone}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}